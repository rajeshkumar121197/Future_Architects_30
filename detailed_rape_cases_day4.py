# -*- coding: utf-8 -*-
"""Detailed_rape_cases_day3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UqGLiapp9GbmJ3hlkz49ECdx5FzSvjQf

Import Necessary Libraries:
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.filterwarnings('ignore') #suppresses the warnings displayed by the code editor.

#load the dataset into a dataframe
detailed_cases = pd.read_csv('/content/Detailed Cases (Registered) sexual Assault 2001-2008.csv')

#display max rows and max columns
pd.set_option('display.max_rows',50,'display.max_columns',28)

#displaying the first fives of the dataframe
detailed_cases.head()

#checking the shape of the data
detailed_cases.shape #the dataset have 424 rows and 27 columns

#getting the basic information of the dataset
detailed_cases.info()

#getting the summary of the Numerical columns
detailed_cases.describe()

#checking for missing values in the dataset
detailed_cases.isnull().sum() #majority of the column having missing values and it is very less(<1%) compared to total data

#Handling Missing values
#we are going to drop those rows with missing values since it's less than 1% of the missing data
detailed_cases = detailed_cases.dropna() #dropping rows with null values
detailed_cases.shape #checking the shape after dropping the rows containing missing values now the dataset have 421 rows and 27 columns

#checking for duplicates in the dataset
detailed_cases.duplicated().sum() #there is no duplicate in the dataset

#Lets look the dataframe
detailed_cases

#we can see that 'Incest (Rape) - No. of Cases Reported' and 'Incest (Rape) No. of Victims - Total Victims' are representing the same values and its repeating for other rape cases and total rape cases so we can drop those columns
detailed_cases.drop(columns=['Incest (Rape) - No. of Cases Reported','Other (Rape) - No. of Cases Reported','Rape Cases (Total) - No. of Cases Reported'],inplace=True)

detailed_cases # three repeating columns are dropped from the dataframe.

detailed_cases['Incest (Rape) No. of Victims - Total Victims'].unique()

"""**Univariate Analyis:**"""

#Distribution of total rape case victims
plt.figure(figsize=(10, 5))
sns.histplot(detailed_cases['Rape Cases (Total) No. of Victims - Total Victims'], kde=True)
plt.title("Distribution of Total Rape Cases Victims")
plt.xlabel("Total Cases")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()

#Distribution of  Incest rape case victims
plt.figure(figsize=(10, 5))
sns.histplot(detailed_cases['Incest (Rape) No. of Victims - Total Victims'], kde=True)
plt.title("Distribution of Incest Rape Cases Victims")
plt.xlabel("Incest Rape Cases")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()

#Distribution of Other rape case victims
plt.figure(figsize=(10, 5))
sns.histplot(detailed_cases['Other (Rape) No. of Victims - Total Victims'], kde=True)
plt.title("Distribution of Other Rape Cases Victims")
plt.xlabel("Other Rape Cases")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()

"""Insight:

We can see all the three graphs of Total victims are right skewed that indicates  we have extreme values above the mean value.This is because the rape cases are not continuous. On somedays more rape cases will get registered and on somedays there won't be any rape cases get registered.
"""

#Boxplot for Age Groups
age_cols = [col for col in detailed_cases.columns if 'Victims' in col and 'Total Victims' not in col]

# Number of columns
n_cols = len(age_cols)

# Create subplots - Adjust rows and columns as needed
fig, axes = plt.subplots(n_rows := (n_cols // 4 + n_cols % 4), 4, figsize=(25, n_rows * 4))
axes = axes.flatten()  # Flatten the axes array for easier indexing

# Plot each age column in its own subplot
for i, col in enumerate(age_cols):
    sns.boxplot(data=detailed_cases, y=col, ax=axes[i])
    axes[i].set_title(f"Boxplot for {col}")
    axes[i].set_xlabel("")  # Hide xlabel
    axes[i].set_ylabel("Count")

# Hide any unused subplots
for j in range(i + 1, len(axes)):
    axes[j].axis("off")

plt.tight_layout()
plt.show()

"""**Bivariate Analysis:**"""

#Scatter Plot - Incest vs. Other Rape Cases
plt.figure(figsize=(10,7))
plt.scatter(detailed_cases['Incest (Rape) No. of Victims - Total Victims'], detailed_cases['Other (Rape) No. of Victims - Total Victims'])
plt.xlabel('Incest Rape Cases')
plt.ylabel('Other Rape cases')
plt.title('Incest vs Other Rape cases')
plt.grid(True)
plt.show()
#we can see some moderate correlation between Incest and other rape cases.

# selecting the numeric columns alone for calculating the correlation matrix
cols = detailed_cases.select_dtypes(include=['number']).columns
cols

# Correlation Matrix
plt.figure(figsize=(20,15))
sns.heatmap(detailed_cases[cols].corr(),annot=True,cmap='coolwarm')
plt.title('Correlation Matrix of Case Counts')
plt.show()

"""**Trend Analyis Over Time:**"""

# Line Chart for Total Rape Case Victims Over the Years
yearly_cases = detailed_cases.groupby('Year')['Rape Cases (Total) No. of Victims - Total Victims'].sum()
yearly_cases
#we don't see the data for the year 2004 and 2007 or there were no rape cases registered in thoses years.

#Visualizing the trend
plt.figure(figsize=(10,7))
plt.plot(yearly_cases.index, yearly_cases.values, marker='o',color='Purple')
plt.title('Total Rape Case Victims Over the Years')
plt.xlabel('Year')
plt.ylabel('Total Cases')
plt.grid(True)
plt.show()

"""**State-level Analysis:**"""

# Top 15 States by Total Cases
top_15_states = detailed_cases.groupby('States/ UTs/Cities')['Rape Cases (Total) No. of Victims - Total Victims'].sum().nlargest(15)

plt.figure(figsize=(14,7))
top_15_states.plot(kind='bar',color='green')
plt.title('Top 15 States with Highest Rape case Victims')
plt.xlabel('States')
plt.ylabel('Total Cases')
plt.xticks(rotation=45)
plt.show()

"""Key Insights and KPIs:

1)  Year-over-Year Growth in Total Rape Cases Victim:
"""

# Calculate percentage growth year-over-year
yearly_cases_growth = yearly_cases.pct_change() * 100
print("Year-over-Year Growth in Total Rape Cases:\n", yearly_cases_growth)

# Plot
plt.figure(figsize=(10, 5))
yearly_cases_growth.plot(kind='bar', color='skyblue')
plt.title("Year-over-Year Growth in Reported Cases")
plt.xlabel("Year")
plt.ylabel("Growth Rate (%)")
plt.grid()
plt.show()

"""2) Age Group Distribution of Victims:"""

age_columns = [col for col in detailed_cases.columns if 'Victims' in col and 'Total Victims' not in col]

# Calculate total cases by age group
age_group_totals = detailed_cases[age_columns].sum()

# Plot
age_group_totals.plot(kind='bar', color='lightgreen')
plt.title("Age Group Distribution of Victims")
plt.xlabel("Age Group")
plt.ylabel("Total Cases")
plt.xticks(rotation=90)
plt.show()

"""3) Incest vs. Other Rape Cases"""

# Sum of incest and other cases across all years
incest_cases = detailed_cases['Incest (Rape) No. of Victims - Total Victims'].sum()
other_cases = detailed_cases['Other (Rape) No. of Victims - Total Victims'].sum()

# Calculate and print ratio
incest_to_other_ratio = incest_cases / other_cases
print(f"Ratio of Incest Cases to Other Rape Cases: {incest_to_other_ratio:.2f}")

# Pie Chart
labels = ['Incest Cases', 'Other Rape Cases']
sizes = [incest_cases, other_cases]
plt.pie(sizes, labels=labels, autopct='%1.1f%%', colors=['#ff9999','#66b3ff'])
plt.title("Incest vs. Other Rape Cases")
plt.show()

"""4) Top 15 States by Yearly Case Growth Rate:"""

# Calculate yearly cases by state
year_state_cases = detailed_cases.pivot_table(index="Year", columns="States/ UTs/Cities", values='Rape Cases (Total) No. of Victims - Total Victims', aggfunc='sum')

# Calculate year-over-year growth for each state
state_growth_rate = year_state_cases.pct_change().mean() * 100

# Replace infinity values with NaN and drop them
state_growth_rate = state_growth_rate.replace([float('inf'), -float('inf')], float('nan')).dropna()

# Top 15 states by growth rate
top_growth_states = state_growth_rate.nlargest(15)
print("Top 15 States by Yearly Case Growth Rate:\n", top_growth_states)

# Plotting the top 15 states by yearly growth rate
plt.figure(figsize=(12, 8))
top_growth_states.plot(kind='bar', color='skyblue')

# Adding titles and labels
plt.title("Top 15 States by Average Yearly Rape Case Growth Rate")
plt.xlabel("States/UTs/Cities")
plt.ylabel("Average Yearly Growth Rate (%)")
plt.xticks(rotation=45, ha='right')
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Show plot
plt.tight_layout()
plt.show()

"""5) Top 15 Statewise Total Number of Cases for Minors (Below 18):"""

#Getting the total minor rape cases
detailed_cases['Total Number of Cases for Minors (Below 18)'] = detailed_cases['Rape Cases (Total) No. of Victims - Upto 10 Years']+  detailed_cases['Rape Cases (Total) No. of Victims - (10-14) Years'] +  detailed_cases['Rape Cases (Total) No. of Victims - (14-18) Years']
#Top 15 statewise minor rape cases
Satewise_minor_rape = detailed_cases.groupby('States/ UTs/Cities')['Total Number of Cases for Minors (Below 18)'].sum().nlargest(15)

plt.figure(figsize=(18,8))
plt.bar(x=Satewise_minor_rape.index,height= Satewise_minor_rape.values,color='brown')
plt.title('Top 15 Statewise Minor rape cases')
plt.xlabel('States')
plt.ylabel('Total cases')
plt.xticks(rotation=90)
plt.show()

"""6) Total Rape Cases per age group per year:"""

#Getting the total rape cases columns by different age groups
Total_Rape_Age = [col for col in detailed_cases.columns if '(Total)' in col and 'Total Victims' not in col]
#  Calculate total rape cases per age group per year
age_group_yearly = detailed_cases.groupby("Year")[Total_Rape_Age].sum()

# Plot
age_group_yearly.plot(figsize=(15, 10), marker='o')
plt.title("Trend in Total Rape Cases for Each Age Group")
plt.xlabel("Year")
plt.ylabel("Number of Cases")
plt.legend(title="Age Groups", loc="upper left")
plt.grid(True)
plt.show()

