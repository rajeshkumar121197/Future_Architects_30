# -*- coding: utf-8 -*-
"""Detailed_rape_cases_day3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UqGLiapp9GbmJ3hlkz49ECdx5FzSvjQf

Import Necessary Libraries:
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.filterwarnings('ignore') #suppresses the warnings displayed by the code editor.

#load the dataset into a dataframe
detailed_cases = pd.read_csv('/content/Detailed Cases (Registered) sexual Assault 2001-2008.csv')

#display max rows and max columns
pd.set_option('display.max_rows',50,'display.max_columns',28)

#displaying the first fives of the dataframe
detailed_cases.head()

#checking the shape of the data
detailed_cases.shape #the dataset have 424 rows and 27 columns

#getting the basic information of the dataset
detailed_cases.info()

#getting the summary of the Numerical columns
detailed_cases.describe()

#checking for missing values in the dataset
detailed_cases.isnull().sum() #majority of the column having missing values and it is very less(<1%) compared to total data

#Handling Missing values
#we are going to drop those rows with missing values since it's less than 1% of the missing data
detailed_cases = detailed_cases.dropna() #dropping rows with null values
detailed_cases.shape #checking the shape after dropping the rows containing missing values now the dataset have 421 rows and 27 columns

#checking for duplicates in the dataset
detailed_cases.duplicated().sum() #there is no duplicate in the dataset

#Lets look the dataframe
detailed_cases

#we can see that 'Incest (Rape) - No. of Cases Reported' and 'Incest (Rape) No. of Victims - Total Victims' are representing the same values and its repeating for other rape cases and total rape cases so we can drop those columns
detailed_cases.drop(columns=['Incest (Rape) - No. of Cases Reported','Other (Rape) - No. of Cases Reported','Rape Cases (Total) - No. of Cases Reported'],inplace=True)

detailed_cases # three repeating columns are dropped from the dataframe.

detailed_cases['Incest (Rape) No. of Victims - Total Victims'].unique()

"""**Univariate Analyis:**"""

#Distribution of total rape case victims
plt.figure(figsize=(10, 5))
sns.histplot(detailed_cases['Rape Cases (Total) No. of Victims - Total Victims'], kde=True)
plt.title("Distribution of Total Rape Cases Victims")
plt.xlabel("Total Cases")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()

#Distribution of  Incest rape case victims
plt.figure(figsize=(10, 5))
sns.histplot(detailed_cases['Incest (Rape) No. of Victims - Total Victims'], kde=True)
plt.title("Distribution of Incest Rape Cases Victims")
plt.xlabel("Incest Rape Cases")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()

#Distribution of Other rape case victims
plt.figure(figsize=(10, 5))
sns.histplot(detailed_cases['Other (Rape) No. of Victims - Total Victims'], kde=True)
plt.title("Distribution of Other Rape Cases Victims")
plt.xlabel("Other Rape Cases")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()

"""Insight:

We can see all the three graphs of Total victims are right skewed that indicates  we have extreme values above the mean value.This is because the rape cases are not continuous. On somedays more rape cases will get registered and on somedays there won't be any rape cases get registered.
"""

#Boxplot for Age Groups
age_cols = [col for col in detailed_cases.columns if 'Victims' in col and 'Total Victims' not in col]

# Number of columns
n_cols = len(age_cols)

# Create subplots - Adjust rows and columns as needed
fig, axes = plt.subplots(n_rows := (n_cols // 4 + n_cols % 4), 4, figsize=(25, n_rows * 4))
axes = axes.flatten()  # Flatten the axes array for easier indexing

# Plot each age column in its own subplot
for i, col in enumerate(age_cols):
    sns.boxplot(data=detailed_cases, y=col, ax=axes[i])
    axes[i].set_title(f"Boxplot for {col}")
    axes[i].set_xlabel("")  # Hide xlabel
    axes[i].set_ylabel("Count")

# Hide any unused subplots
for j in range(i + 1, len(axes)):
    axes[j].axis("off")

plt.tight_layout()
plt.show()

"""**Bivariate Analysis:**"""

#Scatter Plot - Incest vs. Other Rape Cases
plt.figure(figsize=(10,7))
plt.scatter(detailed_cases['Incest (Rape) No. of Victims - Total Victims'], detailed_cases['Other (Rape) No. of Victims - Total Victims'])
plt.xlabel('Incest Rape Cases')
plt.ylabel('Other Rape cases')
plt.title('Incest vs Other Rape cases')
plt.grid(True)
plt.show()
#we can see some moderate correlation between Incest and other rape cases.

# selecting the numeric columns alone for calculating the correlation matrix
cols = detailed_cases.select_dtypes(include=['number']).columns
cols

# Correlation Matrix
plt.figure(figsize=(20,15))
sns.heatmap(detailed_cases[cols].corr(),annot=True,cmap='coolwarm')
plt.title('Correlation Matrix of Case Counts')
plt.show()

"""**Trend Analyis Over Time:**"""

# Line Chart for Total Rape Case Victims Over the Years
yearly_cases = detailed_cases.groupby('Year')['Rape Cases (Total) No. of Victims - Total Victims'].sum()
yearly_cases
#we don't see the data for the year 2004 and 2007 or there were no rape cases registered in thoses years.

#Visualizing the trend
plt.figure(figsize=(10,7))
plt.plot(yearly_cases.index, yearly_cases.values, marker='o',color='Purple')
plt.title('Total Rape Case Victims Over the Years')
plt.xlabel('Year')
plt.ylabel('Total Cases')
plt.grid(True)
plt.show()

"""**State-level Analysis:**"""

# Top 15 States by Total Cases
top_15_states = detailed_cases.groupby('States/ UTs/Cities')['Rape Cases (Total) No. of Victims - Total Victims'].sum().nlargest(15)

plt.figure(figsize=(14,7))
top_15_states.plot(kind='bar',color='green')
plt.title('Top 15 States with Highest Rape case Victims')
plt.xlabel('States')
plt.ylabel('Total Cases')
plt.xticks(rotation=45)
plt.show()

